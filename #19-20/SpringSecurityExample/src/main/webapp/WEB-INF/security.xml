<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <beans:import resource="jdbc.xml"/>

    <!--
    <http auto-config="true" use-expressions="false">
        <intercept-url pattern="/user/*" access="ROLE_USER, ROLE_ADMIN"/>
        <intercept-url pattern="/admin*" access="ROLE_ADMIN"/>
        <form-login login-page="/login"
                    login-processing-url="/j_spring_security_check"
                    default-target-url="/admin"
                    authentication-failure-url="/login?error=true"/>
        <logout logout-success-url="/login?logout=true"/>
    </http>
    -->

    <http auto-config="true" use-expressions="false">
        <intercept-url pattern="/user/*" access="ROLE_USER, ROLE_ADMIN"/>
        <intercept-url pattern="/admin*" access="ROLE_ADMIN"/>
    </http>

    <!--
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                                users-by-username-query="select user_name, password, enabled from users where user_name = ?"
                                authorities-by-username-query="select u.user_name, ur.authority from users u, user_roles ur where u.user_id = ur.user_id and u.user_name = ?"/>
        </authentication-provider>
    </authentication-manager>
    -->

    <authentication-manager>
        <authentication-provider ref="provider"/>
    </authentication-manager>

    <beans:bean id="provider" class="com.aidar.CustomAuthenticationProvider" autowire="byType"/>

</beans:beans>